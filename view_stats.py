#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞
"""

import json
import os
from datetime import datetime
from collections import Counter

USERS_FILE = "data/users.json"
STATS_FILE = "data/stats.json"

def load_data(filename):
    """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞"""
    try:
        if os.path.exists(filename):
            with open(filename, 'r', encoding='utf-8') as f:
                return json.load(f)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ {filename}: {e}")
    return {}

def format_datetime(iso_string):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏"""
    try:
        dt = datetime.fromisoformat(iso_string.replace('Z', '+00:00'))
        return dt.strftime("%d.%m.%Y %H:%M:%S")
    except:
        return iso_string

def show_general_stats():
    """–ü–æ–∫–∞–∑–∞—Ç—å –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    stats = load_data(STATS_FILE)
    users = load_data(USERS_FILE)
    
    print("=" * 70)
    print("üìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê MUSIC BOT")
    print("=" * 70)
    print(f"üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
    print(f"üîç –í—Å–µ–≥–æ –ø–æ–∏—Å–∫–æ–≤: {stats.get('total_searches', 0)}")
    print(f"üì• –í—Å–µ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–π: {stats.get('total_downloads', 0)}")
    print(f"üìú –ó–∞–ø—Ä–æ—Å–æ–≤ —Ç–µ–∫—Å—Ç–æ–≤: {stats.get('total_lyrics', 0)}")
    
    if 'bot_started' in stats:
        print(f"üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω: {format_datetime(stats['bot_started'])}")
    
    print("=" * 70)

def show_users_list():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    users = load_data(USERS_FILE)
    
    if not users:
        print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    print("=" * 90)
    print("üë• –°–ü–ò–°–û–ö –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô")
    print("=" * 90)
    
    for user_id, user_data in users.items():
        username = f"@{user_data.get('username', 'N/A')}" if user_data.get('username') else "–ë–µ–∑ username"
        full_name = f"{user_data.get('first_name', '')} {user_data.get('last_name', '') or ''}".strip()
        first_seen = format_datetime(user_data.get('first_seen', ''))
        last_seen = format_datetime(user_data.get('last_seen', ''))
        total_actions = user_data.get('total_actions', len(user_data.get('actions', [])))
        
        print(f"üÜî ID: {user_id}")
        print(f"üë§ –ò–º—è: {full_name}")
        print(f"üì± Username: {username}")
        print(f"üìÖ –ü–µ—Ä–≤—ã–π –≤–∏–∑–∏—Ç: {first_seen}")
        print(f"üïê –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–∏–∑–∏—Ç: {last_seen}")
        print(f"‚ö° –í—Å–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏–π: {total_actions}")
        print("-" * 90)

def show_user_details(user_id):
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    users = load_data(USERS_FILE)
    
    if user_id not in users:
        print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    user_data = users[user_id]
    username = f"@{user_data.get('username', 'N/A')}" if user_data.get('username') else "–ë–µ–∑ username"
    full_name = f"{user_data.get('first_name', '')} {user_data.get('last_name', '') or ''}".strip()
    
    print("=" * 90)
    print(f"üë§ –î–ï–¢–ê–õ–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø: {full_name} ({username})")
    print("=" * 90)
    print(f"üÜî ID: {user_id}")
    print(f"üë§ –ò–º—è: {full_name}")
    print(f"üì± Username: {username}")
    print(f"üìÖ –ü–µ—Ä–≤—ã–π –≤–∏–∑–∏—Ç: {format_datetime(user_data.get('first_seen', ''))}")
    print(f"üïê –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–∏–∑–∏—Ç: {format_datetime(user_data.get('last_seen', ''))}")
    print(f"‚ö° –í—Å–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏–π: {user_data.get('total_actions', 0)}")
    print()
    
    actions = user_data.get('actions', [])
    if actions:
        print(f"‚ö° –ü–û–°–õ–ï–î–ù–ò–ï {min(20, len(actions))} –î–ï–ô–°–¢–í–ò–ô:")
        print("-" * 90)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 –¥–µ–π—Å—Ç–≤–∏–π
        for action in actions[-20:]:
            timestamp = format_datetime(action.get('timestamp', ''))
            action_type = action.get('action', 'unknown')
            details = action.get('details', '')
            
            print(f"üïê {timestamp} | {action_type.upper()}: {details}")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π
        action_counts = Counter(action['action'] for action in actions)
        print()
        print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –î–ï–ô–°–¢–í–ò–ô:")
        print("-" * 50)
        for action_type, count in action_counts.most_common():
            print(f"{action_type}: {count}")
    else:
        print("‚ùå –î–µ–π—Å—Ç–≤–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

def show_top_users():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ø –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    users = load_data(USERS_FILE)
    
    if not users:
        print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –¥–µ–π—Å—Ç–≤–∏–π
    sorted_users = sorted(
        users.items(),
        key=lambda x: x[1].get('total_actions', len(x[1].get('actions', []))),
        reverse=True
    )
    
    print("=" * 90)
    print("üèÜ –¢–û–ü-10 –ê–ö–¢–ò–í–ù–´–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô")
    print("=" * 90)
    
    for i, (user_id, user_data) in enumerate(sorted_users[:10], 1):
        username = f"@{user_data.get('username', 'N/A')}" if user_data.get('username') else "–ë–µ–∑ username"
        full_name = f"{user_data.get('first_name', '')} {user_data.get('last_name', '') or ''}".strip()
        total_actions = user_data.get('total_actions', len(user_data.get('actions', [])))
        
        print(f"{i:2d}. {full_name} ({username}) - {total_actions} –¥–µ–π—Å—Ç–≤–∏–π")

def main():
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    while True:
        print("\n" + "=" * 70)
        print("üéµ –°–¢–ê–¢–ò–°–¢–ò–ö–ê MUSIC BOT")
        print("=" * 70)
        print("1. üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        print("2. üë• –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        print("3. üîç –î–µ—Ç–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        print("4. üèÜ –¢–æ–ø –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        print("5. üö™ –í—ã—Ö–æ–¥")
        print("=" * 70)
        
        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-5): ").strip()
        
        if choice == "1":
            show_general_stats()
        elif choice == "2":
            show_users_list()
        elif choice == "3":
            user_id = input("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ").strip()
            show_user_details(user_id)
        elif choice == "4":
            show_top_users()
        elif choice == "5":
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")

if __name__ == "__main__":
    main()
